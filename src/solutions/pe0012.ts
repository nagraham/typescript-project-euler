import { printBenchmark } from "../lib/benchmark";
import * as Numbers from "../lib/numbers";

/**
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
 * What is the value of the first triangle number to have over five hundred divisors?
 *
 * Runs in ~700ms
 */
function highlyDivisibleTriangularNumber(): number {
  let currentTriangleNum: number = 1;
  let currentNum: number = 2;
  let hasNotFoundHighlyDivisibleTriangleNum: boolean = true;

  while (Numbers.factors(currentTriangleNum).length < 500) {
    currentTriangleNum += currentNum;
    currentNum++;
  }

  return currentTriangleNum;
}

printBenchmark(highlyDivisibleTriangularNumber);
